@model GuitarStore.Models.Cart
@{
    ViewBag.Title = "Index";

    var subTotal = Model.CartProducts.Sum(x => x.Product.Price * x.Quantity) ?? 0;
    var shippingAndHandling = Model.CartProducts.Sum(x => x.Quantity);
    var tax = (Model.CartProducts.Sum(x => x.Product.Price * x.Quantity) ?? 0) * .1025m;
}
<div class="container-fluid">
    <div class="well">
        @if (TempData.ContainsKey("NewItem"))
            {
            <div class="alert alert-success">
                @TempData["NewItem"]
            </div>
        }

        @if (subTotal > 0)
        {

            using (Html.BeginForm())
            {
                @Html.HiddenFor(m => m.ID)
                @Html.AntiForgeryToken()
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Item</th>
                            <th>Quantity</th>
                            <th>Price</th>
                            <th>Item Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.CartProducts.Count; i++)
                    {
                            <tr>

                                <td>
                                    @Model.CartProducts.ElementAt(i).Product.MakeName @Model.CartProducts.ElementAt(i).Product.Mod
                                </td>
                                <td>
                                    <input type="number" min="0" max="10" class="form-control" value="@Model.CartProducts.ElementAt(i).Quantity" name="@("CartProducts[" + i + "].Quantity")" />
                                </td>
                                <td>
                                    @((Model.CartProducts.ElementAt(i).Product.Price ?? 0).ToString("C"))
                                </td>
                                <td>@(((Model.CartProducts.ElementAt(i).Quantity * Model.CartProducts.ElementAt(i).Product.Price) ?? 0).ToString("C"))</td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        <tr>
                            <th colspan="3">Subtotal</th>
                            <th>@subTotal.ToString("C")</th>
                        </tr>
                        <tr>
                            <th colspan="3">Shipping and Handling</th>
                            <th>@shippingAndHandling.ToString("C")</th>
                        </tr>
                        <tr>
                            <th colspan="3">Tax</th>
                            <th>@tax.ToString("C")</th>
                        </tr>
                        <tr>
                            <th colspan="3">Total</th>
                            <th>@((tax + subTotal + shippingAndHandling).ToString("C"))</th>
                        </tr>
                    </tfoot>
                </table>
                <input type="submit" value="Update Cart Quantities" class="btn btn-default" />
                if (subTotal == 0)
                {
                    @Html.ActionLink("Check Out", "Index", "Checkout", null, new { @class = "btn btn-primary disabled" })
                }
                else
                {
                    @Html.ActionLink("Check Out", "Index", "Checkout", null, new { @class = "btn btn-primary" })
                }
                @Html.ActionLink("Reset Cart", "ResetCart", "Cart", null, new { @class = "btn btn-primary" })
            }

        }
        else
        {

            <div id="empty" class="alert alert-info">Your Cart Is Empty</div>
        }
    </div>
</div>